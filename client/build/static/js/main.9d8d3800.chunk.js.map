{"version":3,"sources":["hooks/http.hooks.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","async","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","key","_id","from","to","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","placeholder","id","type","value","onChange","e","target","onKeyPress","event","push","console","log","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","textAlign","onClick","disabled","marginRight","Navbar","padding","preventDefault","App","setToken","setUserId","ready","setReady","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d8d3800.chunk.js","sourcesContent":["import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if(body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            const response = await fetch(url, { method, body, headers })\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message||'Something going wrong')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback ( () => setError(null), []) \r\n\r\n    return { loading, request, error, clearError }\r\n}","import {createContext} from 'react'\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n\r\n})","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n    <div style={{display: 'flex', justifyContent: 'center', paddingTop:'2rem'}}>\r\n        <div className=\"preloader-wrapper active\">\r\n            <div className=\"spinner-layer spinner-red-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\"/>\r\n                </div><div className=\"gap-patch\">\r\n                    <div className=\"circle\"/>\r\n                </div><div className=\"circle-clipper right\">\r\n                    <div className=\"circle\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const LinksList = ({ links }) => {\r\n    if(!links.length) {\r\n        return <p className=\"center\">You're dog</p>\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Original</th>\r\n                    <th>Short</th>\r\n                    <th>Open</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {links.map((link, index) => {\r\n                    return (\r\n                        <tr key={link._id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{link.from}</td>\r\n                            <td>{link.to}</td>\r\n                            <td>\r\n                                <Link to={`/detail/${link._id}`}>Open</Link>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React, {useState, useContext, useCallback, useEffect} from 'react'\r\nimport {useHttp} from '../hooks/http.hooks'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinksList} from '../components/LinksList.js'\r\n\r\n\r\nexport const LinksPage = () => {\r\n    const [links, setLinks] = useState([])\r\n    const {loading, request} = useHttp()\r\n    const {token} = useContext(AuthContext)\r\n\r\n    const fetchLinks = useCallback(async () => {\r\n        try {\r\n            const fetched = await request('/api/link', 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setLinks(fetched)\r\n        }catch (e) {}\r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        fetchLinks()\r\n    }, [fetchLinks])\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {!loading && <LinksList links={links}/>}\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState, useContext } from \"react\"\r\nimport { useHttp } from \"../hooks/http.hooks\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const CreatePage = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const [link, setLink] = useState()\r\n    const {request} = useHttp()\r\n\r\n    useEffect( () => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const pressHandler = async event => {\r\n        if (event.key === 'Enter') {\r\n            try {\r\n                const data = await request('/api/link/generate', 'POST', {from: link}, {\r\n                    Authorization: `Bearer ${auth.token}`\r\n                })\r\n\r\n                history.push(`/detail/${data.link._id}`)\r\n                console.log(data)\r\n            } catch (e) { }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s8 offset-s2\" style={{ paddingTop: '2rem' }}>\r\n                <div className=\"input-field\">\r\n                    <input placeholder=\"Put your link here\"\r\n                        id=\"link\"\r\n                        type=\"text\"\r\n                        value={link}\r\n                        onChange={e => setLink(e.target.value)}\r\n                        onKeyPress={pressHandler}\r\n                    />\r\n                    <label htmlFor=\"link\">Enter your link</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const LinkCard = ({ link }) => {\r\n    return (\r\n        <>\r\n         <h2>Link</h2>\r\n        <p>Your link: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n        <p>From: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n        <p>Clicks: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\"><strong>{link.clicks}</strong></a></p>\r\n        <p>Date: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\"><strong>{new Date(link.date).toLocaleDateString()}</strong></a></p>\r\n        </>\r\n\r\n    )\r\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hooks'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinkCard} from '../components/LinkCard'\r\n\r\nexport const DetailPage = () => {\r\n  const {token} = useContext(AuthContext)\r\n  const {request, loading} = useHttp()\r\n  const [link, setLink] = useState(null)\r\n  const linkId = useParams().id\r\n\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setLink(fetched)\r\n    } catch (e) {}\r\n  }, [token, linkId, request])\r\n\r\n  useEffect(() => {\r\n    getLink()\r\n  }, [getLink])\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { !loading && link && <LinkCard link={link} /> }\r\n    </>\r\n  )\r\n}","import React, {useState, useEffect, useContext} from 'react'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport { useMessage } from '../hooks/message.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const {loading, request, error, clearError} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    })\r\n\r\n    useEffect( () => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    useEffect( () => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            message(data.message)\r\n        } catch(e) {}\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form})\r\n            auth.login(data.token, data.userId)\r\n        } catch(e) {}\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\" >\r\n                <h1 style={{ textAlign: \"center\" }}>Сократи ссылку</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Authorization</span>\r\n                        <div>\r\n                            <div className=\"input-field\">\r\n                                <input placeholder=\"email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"first_name\">email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input placeholder=\"password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"first_name\">password</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button \r\n                        className=\"btn yellow darken-4\"\r\n                        onClick={loginHandler}\r\n                        disabled={loading} \r\n                        style={{marginRight: 10}}\r\n                        >Sign in\r\n                        </button>\r\n                        <button \r\n                        className=\"btn grey lighten-1 black-text\"\r\n                        onClick={registerHandler}\r\n                        disabled={loading}\r\n                        >Sign Up\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n    return useCallback( text => {\r\n        if (window.M && text) {\r\n            window.M.toast( {html:text} )\r\n        }\r\n    }, [])\r\n}","import React, { useContext } from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n        <div className=\"nav-wrapper blue darken-1\" style={{padding:'0 2rem'}}>\r\n          <span className=\"brand-logo\">URL shortener</span>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li><NavLink to=\"/create\">Add link</NavLink></li>\r\n            <li><NavLink to=\"/links\">Your links</NavLink></li>\r\n            <li><a href=\"/\" onClick={logoutHandler}>Log out</a></li>\r\n          </ul>\r\n        </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport {useRoutes} from './routes'\r\nimport {useAuth} from './hooks/auth.hook'\r\nimport { AuthContext } from './context/AuthContext'\r\nimport { Navbar } from './components/Navbar'\r\nimport 'materialize-css'\r\nimport { Loader } from './components/Loader'\r\n\r\nfunction App() {\r\n  const {token, login, logout, userId, ready} = useAuth()\r\n  const isAuthenticated = !!token\r\n  const routes = useRoutes(isAuthenticated)\r\n\r\n  if (!ready) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      token, login, logout, userId, isAuthenticated\r\n    }}>\r\n    <Router>\r\n      { isAuthenticated && <Navbar />}\r\n      <div className = 'container'>\r\n        {routes}\r\n      </div>\r\n    </Router>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n\r\n    const login = useCallback ((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId:id, token:jwtToken\r\n        }))\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n    return { login, logout, token, userId, ready }\r\n}","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {LinksPage} from './pages/LinksPage'\r\nimport {CreatePage} from './pages/CreatePage'\r\nimport {DetailPage} from './pages/DetailPage'\r\nimport {AuthPage} from './pages/AuthPage'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage />\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage />\r\n                </Route>\r\n                <Route path=\"/detail/:id\">\r\n                    <DetailPage />\r\n                </Route>\r\n                <Redirect to=\"/create\" />\r\n            </Switch>\r\n        )\r\n    } else {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <AuthPage></AuthPage>\r\n                </Route>\r\n            </Switch>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}